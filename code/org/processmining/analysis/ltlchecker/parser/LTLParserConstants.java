/* Generated By:JJTree&JavaCC: Do not edit this line. LTLParserConstants.java */
package org.processmining.analysis.ltlchecker.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface LTLParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 7;
  /** RegularExpression Id. */
  int KAS = 9;
  /** RegularExpression Id. */
  int KATE = 10;
  /** RegularExpression Id. */
  int KDATE = 11;
  /** RegularExpression Id. */
  int KEXISTS = 12;
  /** RegularExpression Id. */
  int KFORALL = 13;
  /** RegularExpression Id. */
  int KFORMULA = 14;
  /** RegularExpression Id. */
  int KIN = 15;
  /** RegularExpression Id. */
  int KNUMBER = 16;
  /** RegularExpression Id. */
  int KPI = 17;
  /** RegularExpression Id. */
  int KRENAME = 18;
  /** RegularExpression Id. */
  int KSET = 19;
  /** RegularExpression Id. */
  int KSTRING = 20;
  /** RegularExpression Id. */
  int KSUBFORMULA = 21;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 22;
  /** RegularExpression Id. */
  int REAL_LITERAL = 23;
  /** RegularExpression Id. */
  int EXPONENT = 24;
  /** RegularExpression Id. */
  int STRING_LITERAL = 25;
  /** RegularExpression Id. */
  int DESC_LITERAL = 26;
  /** RegularExpression Id. */
  int PIID = 27;
  /** RegularExpression Id. */
  int ATEID = 28;
  /** RegularExpression Id. */
  int ID = 29;
  /** RegularExpression Id. */
  int IDENTIFIER = 30;
  /** RegularExpression Id. */
  int STARTLETTER = 31;
  /** RegularExpression Id. */
  int LETTER = 32;
  /** RegularExpression Id. */
  int DIGIT = 33;
  /** RegularExpression Id. */
  int LPAREN = 34;
  /** RegularExpression Id. */
  int RPAREN = 35;
  /** RegularExpression Id. */
  int LBRACE = 36;
  /** RegularExpression Id. */
  int RBRACE = 37;
  /** RegularExpression Id. */
  int LBRACKET = 38;
  /** RegularExpression Id. */
  int RBRACKET = 39;
  /** RegularExpression Id. */
  int BAR = 40;
  /** RegularExpression Id. */
  int SEMICOLON = 41;
  /** RegularExpression Id. */
  int COMMA = 42;
  /** RegularExpression Id. */
  int DOT = 43;
  /** RegularExpression Id. */
  int COLON = 44;
  /** RegularExpression Id. */
  int ASSIGN = 45;
  /** RegularExpression Id. */
  int GT = 46;
  /** RegularExpression Id. */
  int LT = 47;
  /** RegularExpression Id. */
  int PNOT = 48;
  /** RegularExpression Id. */
  int SLASH = 49;
  /** RegularExpression Id. */
  int PLUS = 50;
  /** RegularExpression Id. */
  int MINUS = 51;
  /** RegularExpression Id. */
  int STAR = 52;
  /** RegularExpression Id. */
  int EQ = 53;
  /** RegularExpression Id. */
  int LE = 54;
  /** RegularExpression Id. */
  int GE = 55;
  /** RegularExpression Id. */
  int NE = 56;
  /** RegularExpression Id. */
  int REQ = 57;
  /** RegularExpression Id. */
  int POR = 58;
  /** RegularExpression Id. */
  int PAND = 59;
  /** RegularExpression Id. */
  int PIMPLIES = 60;
  /** RegularExpression Id. */
  int PBIIMPLIES = 61;
  /** RegularExpression Id. */
  int LALWAYS = 62;
  /** RegularExpression Id. */
  int LEVENTUALLY = 63;
  /** RegularExpression Id. */
  int LNEXTTIME = 64;
  /** RegularExpression Id. */
  int LUNTIL = 65;
  /** RegularExpression Id. */
  int URI = 66;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_SINGLE_LINE_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"#\"",
    "<SINGLE_LINE_COMMENT>",
    "<token of kind 8>",
    "\"as\"",
    "\"ate\"",
    "\"date\"",
    "\"exists\"",
    "\"forall\"",
    "\"formula\"",
    "\"in\"",
    "\"number\"",
    "\"pi\"",
    "\"rename\"",
    "\"set\"",
    "\"string\"",
    "\"subformula\"",
    "<INTEGER_LITERAL>",
    "<REAL_LITERAL>",
    "<EXPONENT>",
    "<STRING_LITERAL>",
    "<DESC_LITERAL>",
    "<PIID>",
    "<ATEID>",
    "<ID>",
    "<IDENTIFIER>",
    "<STARTLETTER>",
    "<LETTER>",
    "<DIGIT>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"|\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\":\"",
    "\":=\"",
    "\">\"",
    "\"<\"",
    "\"!\"",
    "\"/\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"~=\"",
    "\"\\\\/\"",
    "\"/\\\\\"",
    "\"->\"",
    "\"<->\"",
    "\"[]\"",
    "\"<>\"",
    "\"_O\"",
    "\"_U\"",
    "<URI>",
  };

}
